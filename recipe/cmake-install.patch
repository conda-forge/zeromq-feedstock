From ccbb06d6d6625ea3428466035d8f98cedaf5a4da Mon Sep 17 00:00:00 2001
From: Sylvain Corlay <sylvain.corlay@gmail.com>
Date: Thu, 19 Jan 2017 17:06:10 +0100
Subject: [PATCH] cmake-patch

---
 CMakeLists.txt        | 64 ++++++++++++++++++++++++++++++++++++---------------
 INSTALL               | 22 ++++++++++++++++++
 ZeroMQConfig.cmake.in | 15 ++++++++++++
 3 files changed, 82 insertions(+), 19 deletions(-)
 create mode 100644 ZeroMQConfig.cmake.in

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 6c83e9f..8de676f 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -469,6 +469,7 @@ endif ()
 # source files
 
 set (cxx-sources
+        precompiled.cpp
         address.cpp
         client.cpp
         clock.cpp
@@ -510,7 +511,6 @@ set (cxx-sources
         poll.cpp
         poller_base.cpp
         pollset.cpp
-        precompiled.cpp
         proxy.cpp
         pub.cpp
         pull.cpp
@@ -731,6 +731,8 @@ if (MSVC)
     RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/bin"
     COMPILE_DEFINITIONS "DLL_EXPORT")
   add_library (libzmq-static STATIC ${sources})
+  # NOTE: on windows platform the static library name cannot be the same as the shared library name.
+  # since the .dll also requires a .lib companion file for linking.
   set_target_properties (libzmq-static PROPERTIES
     PUBLIC_HEADER "${public_headers}"
     RELEASE_POSTFIX "${MSVC_TOOLSET}-mt-s-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}"
@@ -765,7 +767,7 @@ else ()
     set_target_properties (libzmq-static PROPERTIES
       PUBLIC_HEADER "${public_headers}"
       COMPILE_DEFINITIONS "ZMQ_STATIC"
-      OUTPUT_NAME "libzmq-static"
+      OUTPUT_NAME "libzmq"
       PREFIX "")
 endif ()
 
@@ -844,17 +846,19 @@ endif ()
 #-----------------------------------------------------------------------------
 # installer
 
+include(GNUInstallDirs)
+
 if (MSVC)
   install (TARGETS libzmq libzmq-static
-          ARCHIVE DESTINATION lib
-          LIBRARY DESTINATION lib
-          PUBLIC_HEADER DESTINATION include
+          ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
+          LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+          PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
           COMPONENT SDK)
   if (CMAKE_BUILD_TYPE STREQUAL "Debug")
     install (TARGETS libzmq libzmq-static
-            RUNTIME DESTINATION bin
-            ARCHIVE DESTINATION lib
-            PUBLIC_HEADER DESTINATION include
+            RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+            ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
+            PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
             COMPONENT SDK)
     if (NOT CMAKE_PDB_OUTPUT_DIRECTORY)
       install (FILES ${CMAKE_CURRENT_BINARY_DIR}/bin/libzmq${MSVC_TOOLSET}-mt-gd-${ZMQ_VERSION_MAJOR}_${ZMQ_VERSION_MINOR}_${ZMQ_VERSION_PATCH}.pdb DESTINATION lib
@@ -862,17 +866,17 @@ if (MSVC)
     endif ()
   else ()
     install (TARGETS libzmq
-            RUNTIME DESTINATION bin
-            PUBLIC_HEADER DESTINATION include
+            RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+            PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
             COMPONENT Runtime)
   endif ()
 else ()
   install (TARGETS libzmq libzmq-static
-          RUNTIME DESTINATION bin
-          ARCHIVE DESTINATION lib
-          LIBRARY DESTINATION lib
+          RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+          ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
+          LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
           FRAMEWORK DESTINATION "Library/Frameworks"
-          PUBLIC_HEADER DESTINATION include)
+          PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
 endif ()
 
 # install (FILES ${public_headers}
@@ -889,11 +893,7 @@ foreach (readme ${readme-docs})
   configure_file (${CMAKE_CURRENT_SOURCE_DIR}/${readme} ${CMAKE_CURRENT_BINARY_DIR}/${readme}.txt)
 
   if (NOT ZMQ_BUILD_FRAMEWORK)
-    if (MSVC)
-      install (FILES ${CMAKE_CURRENT_BINARY_DIR}/${readme}.txt DESTINATION .)
-    else ()
-      install (FILES ${CMAKE_CURRENT_BINARY_DIR}/${readme}.txt DESTINATION share/zmq)
-    endif ()
+    install (FILES ${CMAKE_CURRENT_BINARY_DIR}/${readme}.txt DESTINATION share/zmq)
   endif ()
 endforeach ()
 
@@ -903,8 +903,34 @@ if (WITH_DOC)
   endif ()
 endif ()
 
+include(CMakePackageConfigHelpers)
 
 if (MSVC)
+  string(TOUPPER "${CMAKE_BUILD_TYPE}" U_CMAKE_BUILD_TYPE)
+  get_property(libzmq_pf TARGET libzmq PROPERTY ${U_CMAKE_BUILD_TYPE}_POSTFIX)
+  set(libzmq_file libzmq${libzmq_pf}${CMAKE_LINK_LIBRARY_SUFFIX})
+  get_property(libzmq_static_pf TARGET libzmq-static PROPERTY ${U_CMAKE_BUILD_TYPE}_POSTFIX)
+  set(libzmq_static_file libzmq-static${libzmq_static_pf}${CMAKE_LINK_LIBRARY_SUFFIX})
+else()
+  set(libzmq_file libzmq${CMAKE_SHARED_LIBRARY_SUFFIX})
+  set(libzmq_static_file libzmq-static${CMAKE_STATIC_LIBRARY_SUFFIX})
+endif()
+
+# GNUInstallDirs "DATADIR" wrong here; CMake search path wants "share".
+set(ZEROMQ_CMAKECONFIG_INSTALL_DIR "share/cmake/${PROJECT_NAME}" CACHE STRING "install path for ZeroMQConfig.cmake")
+
+configure_package_config_file(${PROJECT_NAME}Config.cmake.in
+                              "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"
+                              INSTALL_DESTINATION ${ZEROMQ_CMAKECONFIG_INSTALL_DIR})
+write_basic_package_version_file(${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake
+                                 VERSION ${ZMQ_VERSION_MAJOR}.${ZMQ_VERSION_MINOR}.${ZMQ_VERSION_PATCH}
+                                 COMPATIBILITY AnyNewerVersion)
+install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake
+              ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake
+              DESTINATION ${ZEROMQ_CMAKECONFIG_INSTALL_DIR})
+
+option(ENABLE_CPACK "Enables cpack rules" ON)
+if (MSVC AND ENABLE_CPACK)
   include (InstallRequiredSystemLibraries)
 
   if (CMAKE_CL_64)
diff --git a/INSTALL b/INSTALL
index 026c01a..edbf86a 100644
--- a/INSTALL
+++ b/INSTALL
@@ -14,6 +14,28 @@ If you clone the Git repository then you should start by running the
 command `./autogen.sh`. This is not necessary if you get the source
 packages.
 
+CMake installation
+==================
+
+The following options are available for cmake invocation:
+
+- `WITH_PERF_TOOL'
+    Enables the build of performance tools. Default value is ON.
+- `ZMQ_BUILD_TESTS'
+    Builds ZeroMQ tests. Default value is ON.
+- `ENABLE_CPACK'
+    Enables CPack build rules. This option has effect on Windows
+    platform only. Default value is ON. Turn it to OFF if you
+    don't want the runtime libraries to be installed (typically
+    if your installation destination already contains them).
+    
+
+Example: installing ZeroMQ on Windows with no tests, no performance
+tools, and no runtime library copy:
+
+cmake -G "NMake Makefiles" -D WITH_PERF_TOOL=OFF -D ZMQ_BUILD_TESTS=OFF
+-D ENABLE_CPACK=OFF -D CMAKE_BUILD_TYPE=Release
+
 Windows Builds
 ==============
 
diff --git a/ZeroMQConfig.cmake.in b/ZeroMQConfig.cmake.in
new file mode 100644
index 0000000..bfdb981
--- /dev/null
+++ b/ZeroMQConfig.cmake.in
@@ -0,0 +1,15 @@
+# ZeroMQ cmake module
+# This module sets the following variables in your project::
+#
+#   ZeroMQ_FOUND - true if ZeroMQ found on the system
+#   ZeroMQ_INCLUDE_DIR - the directory containing ZeroMQ headers
+#   ZeroMQ_LIBRARY - 
+#   ZeroMQ_STATIC_LIBRARY
+
+@PACKAGE_INIT@
+
+set(PN ZeroMQ)
+set_and_check(${PN}_INCLUDE_DIR "${PACKAGE_PREFIX_DIR}/@CMAKE_INSTALL_INCLUDEDIR@")
+set_and_check(${PN}_LIBRARY "${PACKAGE_PREFIX_DIR}/@CMAKE_INSTALL_LIBDIR@/@libzmq_file@")
+set_and_check(${PN}_STATIC_LIBRARY "${PACKAGE_PREFIX_DIR}/@CMAKE_INSTALL_LIBDIR@/@libzmq_static_file@")
+check_required_components(${PN})
-- 
2.5.3

